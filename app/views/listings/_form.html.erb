<%= simple_form_for(@listing) do |f| %>
  <%= f.error_notification %>

  <div class="form-inputs">
    <%= f.hidden_field :depart_maps_id %>
    <input id="start_pac_input" class="controls" type="text" placeholder="Enter a starting location">
    <%= f.select :depart_loc_id, GeneralLocation.all.map { |l| [l.name, l.id] }, {:include_blank => '-Select-'} %>
    <%= f.input :depart_range_start %>
    <%= f.input :depart_range_end %>
    <%= f.hidden_field :dest_maps_id %>
    <input id="dest_pac_input" class="controls" type="text" placeholder="Enter a destination location">
    <%= f.select :dest_loc_id, GeneralLocation.all.map { |l| [l.name, l.id] }, {:include_blank => '-Select-'}%>
    <%= f.input :dest_range_start %>
    <%= f.input :dest_range_end %>
    <%= f.input :listing_type %>
    <%= f.input :money %>
    <%= f.input :comments %>
    <%= f.input :detour_time %>
  </div>

  <div class="form-actions">
    <%= f.button :submit %>
  </div>

<script>
function initAutocomplete() {

  var startLocationInput = document.getElementById('start_pac_input');
  var destLocationInput = document.getElementById('dest_pac_input');
  var startPlaceIDField = document.getElementById('listing_depart_maps_id');
  var destPlaceIDField = document.getElementById('listing_dest_maps_id');

  if(startPlaceIDField.value != ""){
    var geocoder = new google.maps.Geocoder;
    
    geocoder.geocode({'placeId': startPlaceIDField.value}, function(results, status) {
      if (status === google.maps.GeocoderStatus.OK) {
        if (results[0]) {
          startLocationInput.value = results[0].formatted_address;
        } else {
          console.log('No start result found');
        }
      } else {
        console.log('Geocoder failed due to: ' + status);
      }
    });
  }

  if(destPlaceIDField.value != ""){
    var geocoder = new google.maps.Geocoder;

    geocoder.geocode({'placeId': destPlaceIDField.value}, function(results, status) {
      if (status === google.maps.GeocoderStatus.OK) {
        if (results[0]) {
          destLocationInput.value = results[0].formatted_address;
        } else {
         console.log('No dest result found');
       }
     } else {
      console.log('Geocoder failed due to: ' + status);
    }
  });

  }

  var startAutocomplete = new google.maps.places.Autocomplete(startLocationInput);
  var endAutocomplete = new google.maps.places.Autocomplete(destLocationInput);


  startAutocomplete.addListener('place_changed', function() {
    
    var place = startAutocomplete.getPlace();
    if (!place.geometry) {
      return;
    }

    startPlaceIDField.value =place.place_id;
  });

  endAutocomplete.addListener('place_changed', function() {
    
    var place = endAutocomplete.getPlace();
    if (!place.geometry) {
      return;
    }

    destPlaceIDField.value = place.place_id;

  });
}
</script>
<script src="https://maps.googleapis.com/maps/api/js?key=<%= @maps.secret %>&libraries=places&signed_in=true&callback=initAutocomplete"
async defer></script>
<% end %>
